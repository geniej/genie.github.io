/*
 * App URI: app/example/Albums
 * Source Location: app/example/Albums.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/example/Albums", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Albums.js
			 * Created at 2018. 12. 11. 오전 10:26:03.
			 *
			 * @author ljy
			 ************************************************/
			
			function ofReady(params, direction) {
				console.log("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			
			}
			
			onGetImagesCallback = function(result) {
				//	alert("onGetImagesCallback = " + JSON.stringify(result));
			
				if (result.resultCode == "0") {
					var imgResult1 = app.lookup("imgResult1");
					imgResult1.src = "data:image/jpeg;base64," + result.result[0];
			
					var imgResult2 = app.lookup("imgResult2");
					imgResult2.src = "data:image/jpeg;base64," + result.result[1];
			
					var imgResult3 = app.lookup("imgResult3");
					imgResult3.src = "data:image/jpeg;base64," + result.result[2];
			
					var imgResult4 = app.lookup("imgResult4");
					imgResult4.src = "data:image/jpeg;base64," + result.result[3];
				} else {
					//		console.log(imageData.errorMessage);
				}
			};
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				setNowPage(app);
			}
			
			/*
			 * "이전" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				backPressed();
			}
			
			/*
			 * "실행" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnExecuteClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnExecute = e.control;
			
				var etType = app.lookup("etType");
				var etMin = app.lookup("etMin");
				var etMax = app.lookup("etMax");
			
				if (!etType.value) {
					alert("TYPE을 입력해 주세요");
					return;
				}
			
				if (!etMin.value) {
					alert("MIN 값을 입력해 주세요");
					return;
				}
			
				if (!etMax.value) {
					alert("MAX 값을 입력해 주세요");
					return;
				}
			
				var param = {
					'type': Number(etType.value),
					'min': Number(etMin.value),
					'max': Number(etMax.value)
				};
			
				if (getUserAgent() != "else") {
					OFPlugin.camera.getImages(onGetImagesCallback, param);
				} else {
					alert("지원안함");
				}
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "이전";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "10px",
				"left": "10px",
				"width": "79px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "TYPE";
			container.addChild(output_1, {
				"top": "40px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("etType");
			inputBox_1.value = "1";
			container.addChild(inputBox_1, {
				"top": "40px",
				"left": "88px",
				"width": "115px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "MIN";
			container.addChild(output_2, {
				"top": "70px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("etMin");
			inputBox_2.value = "1";
			container.addChild(inputBox_2, {
				"top": "70px",
				"left": "88px",
				"width": "115px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btnExecute");
			button_2.value = "실행";
			if(typeof onBtnExecuteClick == "function") {
				button_2.addEventListener("click", onBtnExecuteClick);
			}
			container.addChild(button_2, {
				"top": "130px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "MAX";
			container.addChild(output_3, {
				"top": "100px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("etMax");
			inputBox_3.value = "4";
			container.addChild(inputBox_3, {
				"top": "100px",
				"left": "88px",
				"width": "115px",
				"height": "20px"
			});
			
			var image_1 = new cpr.controls.Image("imgResult1");
			container.addChild(image_1, {
				"top": "160px",
				"left": "10px",
				"width": "90px",
				"height": "90px"
			});
			
			var image_2 = new cpr.controls.Image("imgResult2");
			container.addChild(image_2, {
				"top": "160px",
				"left": "113px",
				"width": "90px",
				"height": "90px"
			});
			
			var image_3 = new cpr.controls.Image("imgResult3");
			container.addChild(image_3, {
				"top": "260px",
				"left": "10px",
				"width": "90px",
				"height": "90px"
			});
			
			var image_4 = new cpr.controls.Image("imgResult4");
			container.addChild(image_4, {
				"top": "260px",
				"left": "113px",
				"width": "90px",
				"height": "90px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Albums";
	cpr.core.Platform.INSTANCE.register(app);
})();
