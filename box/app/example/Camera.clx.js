/*
 * App URI: app/example/Camera
 * Source Location: app/example/Camera.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/example/Camera", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * Camera.js
			 * Created at Oct 24, 2018 1:30:31 PM.
			 *
			 * @author ljy
			 ************************************************/
			
			//카메라 옵션 객체 생성
			var pictureSource = {
				PHOTOLIBRARY: '0',
				CAMERA: '1',
				SAVEDPHOTOALBUM: '2',
				CAMERA_CROP: '3'
			};
			var destinationType = {
				DATA_URL: '0',
				FILE_URI: '1'
			};
			
			function ofReady(params, direction) {
				console.log("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			
			}
			
			onPhotoDataCallback = function(imageData) {
				if (imageData.resultCode == "0") {
					var imgResult = app.lookup("imgResult");
					imgResult.src = "data:image/jpeg;base64," + imageData.result;
			
					//		var smallImage = document.getElementById('smallImage');
					//		smallImage.style.display = 'block';
					//		smallImage.src = "data:image/jpeg;base64," + imageData.result;
				} else {
			//		console.log(imageData.errorMessage);
				}
			};
			
			onPhotoURICallback = function(imageURI) {
				if (imageURI.resultCode == "0") {
					var imgResult = app.lookup("imgResult");
					imgResult.src = "data:image/jpeg;base64," + imageData.result;
			
					//		var largeImage = document.getElementById('largeImage');
					//		largeImage.style.display = 'block';
					//		largeImage.src = "data:image/jpeg;base64," + imageURI.result;
				} else {
			//		console.log(imageURI.errorMessage);
				}
			};
			
			/*
			 * "이전" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				backPressed();
			}
			
			/*
			 * "Camera" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 * 
			 * 카메라로 찍은 사진 데이터로 가져오기
			 */
			function onBtnCameraClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCamera = e.control;
			
				var param = {
					'quality': '50',
					'destinationType': destinationType.DATA_URL,
					'sourceType': pictureSource.CAMERA
				};
			
				OFPlugin.camera.getPicture(onPhotoDataCallback, param);
			}
			
			/*
			 * "Camera(수정)" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 * 
			 * 카메라로 찍은 사진 수정후 데이터로 가져오기
			 */
			function onBtnCamera2Click( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCamera2 = e.control;
			
				var param = {
					'quality': '20',
					'allowEdit': 'true',
					'destinationType': destinationType.DATA_URL,
					'sourceType': pictureSource.CAMERA_CROP
				};
			
				OFPlugin.camera.getPicture(onPhotoDataCallback, param);
			}
			
			/*
			 * "From Photo Library" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 * 
			 * PHOTOLIBRARY 사진을 선택하여 파일 경로 가져오기
			 */
			function onBtnLibraryClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnLibrary = e.control;
			
				var param = {
					'quality': '50',
					'allowEdit': 'true',
					'destinationType': destinationType.DATA_URL,
					'sourceType': pictureSource.PHOTOLIBRARY
				};
			
				OFPlugin.camera.getPicture(onPhotoDataCallback, param);
			}
			
			/*
			 * "From Photo Album" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 * 
			 * SAVEDPHOTOALBUM 사진을 선택하여 파일 경로 가져오기
			 */
			function onBtnAlbumClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAlbum = e.control;
			
				var param = {
					'quality': '50',
					'destinationType': destinationType.DATA_URL,
					'sourceType': pictureSource.SAVEDPHOTOALBUM
				};
			
				OFPlugin.camera.getPicture(onPhotoDataCallback, param);
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				setNowPage(app);
			
				var cbGubun = app.lookup("cbGubun");
			
				cbGubun.addItem(new cpr.controls.Item("0", "PHOTOLIBRARY"));
				cbGubun.addItem(new cpr.controls.Item("1", "CAMERA"));
				cbGubun.addItem(new cpr.controls.Item("2", "SAVEDPHOTOALBUM"));
				cbGubun.addItem(new cpr.controls.Item("3", "CAMERA_CROP"));
			}
			
			/*
			 * 콤보 박스에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onCbGubunClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cbGubun = e.control;
			
				if (cbGubun.isOpened()) {
					cbGubun.close();
				} else {
					cbGubun.open();
				}
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "이전";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "10px",
				"left": "10px",
				"width": "79px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btnLibrary");
			button_2.value = "From Photo Library";
			if(typeof onBtnLibraryClick == "function") {
				button_2.addEventListener("click", onBtnLibraryClick);
			}
			container.addChild(button_2, {
				"top": "169px",
				"left": "20px",
				"width": "193px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btnAlbum");
			button_3.value = "From Photo Album";
			if(typeof onBtnAlbumClick == "function") {
				button_3.addEventListener("click", onBtnAlbumClick);
			}
			container.addChild(button_3, {
				"top": "199px",
				"left": "20px",
				"width": "193px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button("btnCamera");
			button_4.value = "Camera";
			if(typeof onBtnCameraClick == "function") {
				button_4.addEventListener("click", onBtnCameraClick);
			}
			container.addChild(button_4, {
				"top": "109px",
				"left": "20px",
				"width": "193px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btnCamera2");
			button_5.value = "Camera(수정)";
			if(typeof onBtnCamera2Click == "function") {
				button_5.addEventListener("click", onBtnCamera2Click);
			}
			container.addChild(button_5, {
				"top": "139px",
				"left": "20px",
				"width": "193px",
				"height": "20px"
			});
			
			var image_1 = new cpr.controls.Image("imgResult");
			container.addChild(image_1, {
				"top": "109px",
				"left": "223px",
				"width": "90px",
				"height": "120px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cbGubun");
			comboBox_1.readOnly = true;
			(function(comboBox_1){
			})(comboBox_1);
			if(typeof onCbGubunOpen == "function") {
				comboBox_1.addEventListener("open", onCbGubunOpen);
			}
			if(typeof onCbGubunClick == "function") {
				comboBox_1.addEventListener("click", onCbGubunClick);
			}
			container.addChild(comboBox_1, {
				"top": "52px",
				"left": "20px",
				"width": "193px",
				"height": "29px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Camera";
	cpr.core.Platform.INSTANCE.register(app);
})();
