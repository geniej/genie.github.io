/*
 * App URI: app/example/GlobalVariables
 * Source Location: app/example/GlobalVariables.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/example/GlobalVariables", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * globalVariables.js
			 * Created at Oct 23, 2018 5:24:02 PM.
			 *
			 * @author ljy
			 ************************************************/
			function ofReady(params, direction) {
				console.log("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			
			}
			
			onGlobalVariablesCallback = function(globalVariables) {
				alert("onGetGlobalVariablesCallback = " + JSON.stringify(globalVariables));
			};
			
			/*
			 * "이전" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				backPressed();
			}
			
			/*
			 * "setValue" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSetValue = e.control;
			
				var params = [];
			
				var etSetKey1 = app.lookup("etSetKey1");
				var etSetKey2 = app.lookup("etSetKey2");
			
				if (!etSetKey1.value && !etSetKey2.value) {
					alert("저장할 key 를 하나 이상 입력해 주세요");
					return;
				}
			
				if (etSetKey1.value) {
					var etSetValue1 = app.lookup("etSetValue1");
					var temp = {};
					temp.key = etSetKey1.value;
					temp.value = etSetValue1.value;
					params.push(temp);
				}
			
				if (etSetKey2.value) {
					var etSetValue2 = app.lookup("etSetValue2");
					var temp = {};
					temp.key = etSetKey2.value;
					temp.value = etSetValue2.value;
					params.push(temp);
				}
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.setValue(onGlobalVariablesCallback, params);
				} else {
					localStorage.setItem("gv", JSON.stringify(params));
				}
			}
			
			/*
			 * "getValue" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetValue = e.control;
			
				var params = [];
			
				var etGetKey1 = app.lookup("etGetKey1");
				var etGetKey2 = app.lookup("etGetKey2");
			
				if (!etGetKey1.value && !etGetKey2.value) {
					alert("가져올 key 를 하나 이상 입력해 주세요");
					return;
				}
			
				if (etGetKey1.value) {
					params.push(etGetKey1.value)
				}
			
				if (etGetKey2.value) {
					params.push(etGetKey2.value);
				}
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.getValue(onGlobalVariablesCallback, params);
				} else {
					alert(localStorage.getItem("gv"));
				}
			}
			
			/*
			 * "getKeys" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetKeysClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetKeys = e.control;
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.getKeys(onGlobalVariablesCallback);
				} else {
					alert(localStorage.getItem("gv"));
				}
			}
			
			/*
			 * "getAll" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGetAllClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGetAll = e.control;
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.getAll(onGlobalVariablesCallback);
				} else {
					alert(localStorage.getItem("gv"));
				}
			}
			
			/*
			 * "removeValue" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRemoveValueClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnRemoveValue = e.control;
			
				var params = [];
			
				var etRemoveKey1 = app.lookup("etRemoveKey1");
				var etRemoveKey2 = app.lookup("etRemoveKey2");
			
				if (!etRemoveKey1.value && !etRemoveKey2.value) {
					alert("삭제할 key 를 하나 이상 입력해 주세요");
					return;
				}
			
				if (etRemoveKey1.value) {
					params.push(etRemoveKey1.value)
				}
			
				if (etRemoveKey2.value) {
					params.push(etRemoveKey2.value);
				}
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.remove(onGlobalVariablesCallback, params);
				} else {
					localStorage.removeItem("gv");
				}
			}
			
			/*
			 * "clear" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnClearClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnClear = e.control;
			
				if (getUserAgent() != "else") {
					OFPlugin.global.variable.clear(onGlobalVariablesCallback);
				} else {
					localStorage.removeItem("gv");
				}
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				setNowPage(app);
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "이전";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "10px",
				"left": "20px",
				"width": "79px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "설명";
			container.addChild(output_1, {
				"top": "41px",
				"left": "20px",
				"width": "100px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "- 전역 데이터는 오케스트라에서 제공하는 기능 중 데이터의 설정 및 취득 하는 방법을 제공";
			container.addChild(output_2, {
				"top": "71px",
				"left": "20px",
				"width": "251px",
				"height": "50px"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = " - App 을 종료하면 데이터도 삭제된다.";
			container.addChild(output_3, {
				"top": "131px",
				"left": "20px",
				"width": "251px",
				"height": "25px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("etSetValue1");
			inputBox_1.value = "cookie1";
			container.addChild(inputBox_1, {
				"top": "171px",
				"left": "109px",
				"width": "162px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnGetValue");
			button_2.value = "getValue";
			if(typeof onBtnGetValueClick == "function") {
				button_2.addEventListener("click", onBtnGetValueClick);
			}
			container.addChild(button_2, {
				"top": "310px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btnSetValue");
			button_3.value = "setValue";
			if(typeof onBtnSetValueClick == "function") {
				button_3.addEventListener("click", onBtnSetValueClick);
			}
			container.addChild(button_3, {
				"top": "243px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("etSetKey1");
			inputBox_2.value = "key_1";
			container.addChild(inputBox_2, {
				"top": "171px",
				"left": "20px",
				"width": "79px",
				"height": "25px"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("etGetKey1");
			inputBox_3.value = "key_1";
			container.addChild(inputBox_3, {
				"top": "278px",
				"left": "20px",
				"width": "124px",
				"height": "25px"
			});
			
			var button_4 = new cpr.controls.Button("btnRemoveValue");
			button_4.value = "remove";
			if(typeof onBtnRemoveValueClick == "function") {
				button_4.addEventListener("click", onBtnRemoveValueClick);
			}
			container.addChild(button_4, {
				"top": "426px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var inputBox_4 = new cpr.controls.InputBox("etRemoveKey1");
			inputBox_4.value = "key_1";
			container.addChild(inputBox_4, {
				"top": "394px",
				"left": "20px",
				"width": "124px",
				"height": "25px"
			});
			
			var inputBox_5 = new cpr.controls.InputBox("etSetValue2");
			inputBox_5.value = "cookie2";
			container.addChild(inputBox_5, {
				"top": "206px",
				"left": "109px",
				"width": "162px",
				"height": "25px"
			});
			
			var inputBox_6 = new cpr.controls.InputBox("etSetKey2");
			inputBox_6.value = "key_2";
			container.addChild(inputBox_6, {
				"top": "206px",
				"left": "20px",
				"width": "79px",
				"height": "25px"
			});
			
			var button_5 = new cpr.controls.Button("btnGetKeys");
			button_5.value = "getKeys";
			if(typeof onBtnGetKeysClick == "function") {
				button_5.addEventListener("click", onBtnGetKeysClick);
			}
			container.addChild(button_5, {
				"top": "340px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button("btnGetAll");
			button_6.value = "getAll";
			if(typeof onBtnGetAllClick == "function") {
				button_6.addEventListener("click", onBtnGetAllClick);
			}
			container.addChild(button_6, {
				"top": "364px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var button_7 = new cpr.controls.Button("btnClear");
			button_7.value = "clear";
			if(typeof onBtnClearClick == "function") {
				button_7.addEventListener("click", onBtnClearClick);
			}
			container.addChild(button_7, {
				"top": "456px",
				"left": "20px",
				"width": "251px",
				"height": "20px"
			});
			
			var inputBox_7 = new cpr.controls.InputBox("etGetKey2");
			inputBox_7.value = "key_2";
			container.addChild(inputBox_7, {
				"top": "278px",
				"left": "147px",
				"width": "124px",
				"height": "25px"
			});
			
			var inputBox_8 = new cpr.controls.InputBox("etRemoveKey2");
			inputBox_8.value = "key_2";
			container.addChild(inputBox_8, {
				"top": "394px",
				"left": "147px",
				"width": "124px",
				"height": "25px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "GlobalVariables";
	cpr.core.Platform.INSTANCE.register(app);
})();
