/*
 * App URI: app/Index2
 * Source Location: app/Index2.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/Index2", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * index.js
			 * Created at 2018. 10. 1. 오후 2:22:11.
			 *
			 * @author ljy
			 ************************************************/
			function ofReady(params, direction) {
				console.log("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			
				alert("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			}
			
			onSystemInfoCallback = function(systemInfo) {
				alert("onSystemInfoCallback = " + JSON.stringify(systemInfo));
			};
			
			/*
			 * "History" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/History"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * Body에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit( /* cpr.events.CEvent */ e) {
				//	if (getUserAgent() == "else") {
				//		// localStorage 에 있는 history 초기화
				//		// 초기화를 안해주면 기존에 쌓여있는 history 들을 가져와서 stack 이 꼬임
				//		var history = {
				//			list: [],
				//			index: 0
				//		};
				//
				//		history.direction = "forward";
				//
				//		history.list.push({
				//			url: "app/Index"
				//		});
				//
				//		localStorage.setItem("history", JSON.stringify(history));
				//	}
				//
				//	setNowPage(app);
			}
			
			/*
			 * "Popup" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/Popup"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "GlobalVariables" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/GlobalVariables"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "Clip Board" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick4( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/ClipBoard"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "SystemInfoManager" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSystemInfoClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSystemInfo = e.control;
			
				//	var param = [];
				//	param.push("name");
				//	param.push("os_version");
				//	param.push("phone_number");
				//	param.push("telecom_company");
				//	param.push("phone_model");
				//	param.push("device_id");
				//	param.push("mac_address");
				//	param.push("version");
				//	param.push("package_name");
			
				//	OFPlugin.device.getInfo(onSystemInfoCallback, param);
				OFPlugin.device.getInfo(onSystemInfoCallback);
			}
			
			/*
			 * "AppManager" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick5( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/AppManager"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "Navigator" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick6( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/Navigator"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "UserPreferences" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnUserPreferencesClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnUserPreferences = e.control;
			
				var param = {
					url: "app/example/UserPreferences"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "QR Code" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnQrCodeClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnQrCode = e.control;
			
				var param = {
					url: "app/example/QrCode"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				if (getUserAgent() == "else") {
					// localStorage 에 있는 history 초기화
					// 초기화를 안해주면 기존에 쌓여있는 history 들을 가져와서 stack 이 꼬임
					var history = {
						list: [],
						index: 0
					};
			
					history.direction = "forward";
			
					history.list.push({
						url: "app/Index"
					});
			
					localStorage.setItem("history", JSON.stringify(history));
				}
			
				setNowPage(app);
			}
			
			/*
			 * "카메라" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCameraClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCamera = e.control;
			
				var param = {
					url: "app/example/Camera"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "BCR" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnBcrClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnBcr = e.control;
			
				var param = {
					url: "app/example/Bcr"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "공인인증서" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick7( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/Cert"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "보안키패드" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick8( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				var param = {
					url: "app/example/KeyPad"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "네비게이터 유틸리티" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnNavigatorClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnNavigator = e.control;
			
				var param = {
					url: "app/example/NavigatorUtility"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "툴바 유틸리티" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnToolbarClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnToolbar = e.control;
			
				var param = {
					url: "app/example/ToolbarUtility"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "이미지업로드(N)" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnAlbumsClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnAlbums = e.control;
			
				var param = {
					url: "app/example/Albums"
				};
			
				OFHistory.go(param);
			}
			
			/*
			 * "LOGIN" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnLoginClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnLogin = e.control;
			
				var param = {
					url: "app/example/Login"
				};
			
				OFHistory.go(param);
			};
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "History";
			if(typeof onButtonClick2 == "function") {
				button_1.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_1, {
				"top": "20px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "Navigator";
			if(typeof onButtonClick6 == "function") {
				button_2.addEventListener("click", onButtonClick6);
			}
			container.addChild(button_2, {
				"top": "50px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button();
			button_3.value = "Popup";
			if(typeof onButtonClick == "function") {
				button_3.addEventListener("click", onButtonClick);
			}
			container.addChild(button_3, {
				"top": "80px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_4 = new cpr.controls.Button();
			button_4.value = "GlobalVariables";
			if(typeof onButtonClick3 == "function") {
				button_4.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_4, {
				"top": "110px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_5 = new cpr.controls.Button("btnSystemInfo");
			button_5.value = "SystemInfo";
			if(typeof onBtnSystemInfoClick == "function") {
				button_5.addEventListener("click", onBtnSystemInfoClick);
			}
			container.addChild(button_5, {
				"top": "170px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_6 = new cpr.controls.Button();
			button_6.value = "AppManager";
			if(typeof onButtonClick5 == "function") {
				button_6.addEventListener("click", onButtonClick5);
			}
			container.addChild(button_6, {
				"top": "200px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_7 = new cpr.controls.Button();
			button_7.value = "Clip Board";
			if(typeof onButtonClick4 == "function") {
				button_7.addEventListener("click", onButtonClick4);
			}
			container.addChild(button_7, {
				"top": "230px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_8 = new cpr.controls.Button();
			button_8.value = "SMS";
			button_8.visible = false;
			container.addChild(button_8, {
				"top": "559px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_9 = new cpr.controls.Button("btnCamera");
			button_9.value = "카메라";
			button_9.visible = true;
			if(typeof onBtnCameraClick == "function") {
				button_9.addEventListener("click", onBtnCameraClick);
			}
			container.addChild(button_9, {
				"top": "260px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_10 = new cpr.controls.Button();
			button_10.value = "연락처";
			button_10.visible = false;
			container.addChild(button_10, {
				"top": "589px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_11 = new cpr.controls.Button("btnUserPreferences");
			button_11.value = "UserPreferences";
			if(typeof onBtnUserPreferencesClick == "function") {
				button_11.addEventListener("click", onBtnUserPreferencesClick);
			}
			container.addChild(button_11, {
				"top": "140px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_12 = new cpr.controls.Button("btnQrCode");
			button_12.value = "QR Code";
			if(typeof onBtnQrCodeClick == "function") {
				button_12.addEventListener("click", onBtnQrCodeClick);
			}
			container.addChild(button_12, {
				"top": "290px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_13 = new cpr.controls.Button("btnBcr");
			button_13.value = "BCR";
			if(typeof onBtnBcrClick == "function") {
				button_13.addEventListener("click", onBtnBcrClick);
			}
			container.addChild(button_13, {
				"top": "320px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_14 = new cpr.controls.Button();
			button_14.value = "공인인증서";
			if(typeof onButtonClick7 == "function") {
				button_14.addEventListener("click", onButtonClick7);
			}
			container.addChild(button_14, {
				"top": "350px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_15 = new cpr.controls.Button();
			button_15.value = "보안키패드";
			if(typeof onButtonClick8 == "function") {
				button_15.addEventListener("click", onButtonClick8);
			}
			container.addChild(button_15, {
				"top": "380px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_16 = new cpr.controls.Button("btnNavigator");
			button_16.value = "네비게이터 유틸리티";
			if(typeof onBtnNavigatorClick == "function") {
				button_16.addEventListener("click", onBtnNavigatorClick);
			}
			container.addChild(button_16, {
				"top": "410px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_17 = new cpr.controls.Button("btnToolbar");
			button_17.value = "툴바 유틸리티";
			if(typeof onBtnToolbarClick == "function") {
				button_17.addEventListener("click", onBtnToolbarClick);
			}
			container.addChild(button_17, {
				"top": "440px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_18 = new cpr.controls.Button("btnLogin");
			button_18.value = "LOGIN";
			if(typeof onBtnGNBClick == "function") {
				button_18.addEventListener("click", onBtnGNBClick);
			}
			if(typeof onBtnLoginClick == "function") {
				button_18.addEventListener("click", onBtnLoginClick);
			}
			if(typeof onBtnLoginClick3 == "function") {
				button_18.addEventListener("click", onBtnLoginClick3);
			}
			if(typeof onBtnLoginClick2 == "function") {
				button_18.addEventListener("click", onBtnLoginClick2);
			}
			container.addChild(button_18, {
				"top": "470px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			
			var button_19 = new cpr.controls.Button("btnAlbums");
			button_19.value = "이미지업로드(N)";
			button_19.visible = true;
			if(typeof onBtnAlbumsClick == "function") {
				button_19.addEventListener("click", onBtnAlbumsClick);
			}
			container.addChild(button_19, {
				"top": "500px",
				"left": "20px",
				"width": "155px",
				"height": "20px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Index2";
	cpr.core.Platform.INSTANCE.register(app);
})();
