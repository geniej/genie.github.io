/*
 * App URI: app/example/NavigatorUtility
 * Source Location: app/example/NavigatorUtility.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/example/NavigatorUtility", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * NavigatorUtility.js
			 * Created at 2018. 12. 11. 오전 9:10:07.
			 *
			 * @author ljy
			 ************************************************/
			
			function ofReady(params, direction) {
				console.log("ofReady param = " + JSON.stringify(params, null, 4) + " / direction = " + direction);
			
			}
			
			onNavigatorUtilityCallback = function(result) {
				alert("onNavigatorUtilityCallback = " + JSON.stringify(result));
			};
			
			onGnbCallback = function(result) {
				console.log("onGnbCallback = " + JSON.stringify(result));
			};
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				setNowPage(app);
			}
			
			/*
			 * "이전 1" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			
				backPressed();
			}
			
			/*
			 * "실행" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnExecuteClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnExecute = e.control;
			
				var etType = app.lookup("etType");
				var etTitle = app.lookup("etTitle");
			
				if (!etType.value) {
					alert("TYPE을 입력해 주세요");
					return;
				}
			
				if (!etTitle.value) {
					alert("TITLE을 입력해 주세요");
					return;
				}
			
				var param = {
					'type': Number(etType.value),
					'title': etTitle.value
				};
			
				if (getUserAgent() != "else") {
					OFPlugin.menu.callNavigator(onNavigatorUtilityCallback, param);
				} else {
					alert("지원안함");
				}
			}
			
			/*
			 * "실행" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnGnbExecuteClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnGnbExecute = e.control;
			
				var etGnbType = app.lookup("etGnbType");
			
				if (!etGnbType.value) {
					alert("TYPE을 입력해 주세요");
					return;
				}
			
				var param = {
					'type': Number(etGnbType.value)
				};
			
				if (getUserAgent() != "else") {
					OFPlugin.menu.callGNB(onGnbCallback, param);
				} else {
					alert("지원안함");
				}
			}
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button();
			button_1.value = "이전 1";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "10px",
				"left": "10px",
				"width": "100px",
				"height": "20px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("etType");
			inputBox_1.value = "1";
			container.addChild(inputBox_1, {
				"top": "101px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "TYPE";
			container.addChild(output_1, {
				"top": "71px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var output_2 = new cpr.controls.Output();
			output_2.value = "TITLE";
			container.addChild(output_2, {
				"top": "131px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var inputBox_2 = new cpr.controls.InputBox("etTitle");
			inputBox_2.value = "메인 메뉴";
			container.addChild(inputBox_2, {
				"top": "161px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var button_2 = new cpr.controls.Button("btnExecute");
			button_2.value = "실행";
			if(typeof onBtnExecuteClick == "function") {
				button_2.addEventListener("click", onBtnExecuteClick);
			}
			container.addChild(button_2, {
				"top": "191px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var output_3 = new cpr.controls.Output();
			output_3.value = "TYPE";
			container.addChild(output_3, {
				"top": "284px",
				"left": "10px",
				"width": "72px",
				"height": "20px"
			});
			
			var inputBox_3 = new cpr.controls.InputBox("etGnbType");
			inputBox_3.value = "1";
			container.addChild(inputBox_3, {
				"top": "314px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var button_3 = new cpr.controls.Button("btnGnbExecute");
			button_3.value = "실행";
			if(typeof onBtnGnbExecuteClick == "function") {
				button_3.addEventListener("click", onBtnGnbExecuteClick);
			}
			container.addChild(button_3, {
				"top": "344px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var output_4 = new cpr.controls.Output();
			output_4.value = "callNavigator";
			container.addChild(output_4, {
				"top": "40px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			
			var output_5 = new cpr.controls.Output();
			output_5.value = "callGNB";
			container.addChild(output_5, {
				"top": "254px",
				"left": "10px",
				"width": "193px",
				"height": "20px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "NavigatorUtility";
	cpr.core.Platform.INSTANCE.register(app);
})();
